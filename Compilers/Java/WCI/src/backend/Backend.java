package backend;

import intermediate.ICode;
import intermediate.SymTab;
import intermediate.SymTabStack;
import message.*;

/**
 * <h1>Backend</h1> 
 *
 * <p>The framework class that represents the backend component.</p>
 */
public abstract class Backend implements MessageProducer {
	
	// Message handler delegate.
	protected static MessageHandler messageHandler;
	
	static {
		messageHandler = new MessageHandler();
	}
	protected SymTab symtab;	// Symbol table used.
	protected ICode iCode;		// Intermediate code used.
	
	/**
	 * Process the intermediate code and the symbol table
	 * generated by the parser. To be implemented by a 
	 * compiler or an interpreter subclass.
	 * @param iCode intermediate code used.
	 * @param symTab symbol table used.
	 * @throws Exception if an error occurred.
	 */
	public abstract void process(ICode iCode, SymTab symTab)
		throws Exception;
	
	
}
